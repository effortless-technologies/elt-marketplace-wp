<?php

/**
 * 
 * Plugin install script which adds default pages, taxonomies, and database tables to WordPress. Runs on activation and upgrade.
 *
 * @author 		Dualcube
 * @package 	wcmp/Admin/Install
 * @version    0.0.1
 */
class WCMp_Product_Import_Export_Bundle_Install {
  
  public function __construct() {
  	
    global $WCMp_Product_Import_Export_Bundle;
	
    if(!get_option( "wcmp_product_vendor_import_export_plugin_page_install")){ 
        $this->wcmp_product_vendor_plugin_create_pages();
    }
    
    update_option( "wcmp_product_vendor_import_export_plugin_page_install", 1 );
   
  }
  
  /**
   * Create a page
   *
   * @access public
   * @param mixed $slug Slug for the new page
   * @param mixed $option Option name to store the page's ID
   * @param string $page_title (default: '') Title for the new page
   * @param string $page_content (default: '') Content for the new page
   * @param int $post_parent (default: 0) Parent for the new page
   * @return void
   */
  public function wcmp_product_vendor_plugin_create_page( $slug, $option, $page_title = '', $page_content = '', $post_parent = 0 ) {
    global $wpdb;

   
    $option_value = get_option( $option );
    if ( $option_value > 0 && get_post( $option_value ) )
      return;
    $page_found = $wpdb->get_var("SELECT ID FROM " . $wpdb->posts . " WHERE post_name = '$slug' LIMIT 1;");
    if ( $page_found ) :
      if ( ! $option_value )
        update_option( $option, $page_found );
      return;
    endif;
    $page_data = array(
          'post_status' 		=> 'publish',
          'post_type' 		=> 'page',
          'post_author' 		=> 1,
          'post_name' 		=> $slug,
          'post_title' 		=> $page_title,
          'post_content' 		=> $page_content,
          'post_parent' 		=> $post_parent,
          'comment_status' 	=> 'closed',
          'page_template'  => '/wcmp-product-import-export-full-width-template.php'
      );
      $page_id = wp_insert_post( $page_data );
      update_option( $option, $page_id );
  }
  
  /**
   * Create pages that the plugin relies on, storing page id's in variables.
   *
   * @access public
   * @return void
   */
  public function wcmp_product_vendor_plugin_create_pages() {
    global $WCMp_Product_Import_Export_Bundle;
    $this->wcmp_product_vendor_plugin_create_page( esc_sql( _x('upload_products', 'page_slug', $WCMp_Product_Import_Export_Bundle->text_domain) ), 'wcmp_product_vendor_upload_product_page_id', __('Upload Products', $WCMp_Product_Import_Export_Bundle->text_domain), '[upload_products]' );
    $array_pages = get_option('wcmp_pages_settings_name');
    $array_pages['vendor_upload_product'] = get_option('wcmp_product_vendor_upload_product_page_id');
    update_option('wcmp_pages_settings_name', $array_pages);
  }


}
?>
